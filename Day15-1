상속과 다형성

1. 상속

	class 하위 클래스 extends 상위 클래스{
	
	}
	
	모든 메서드
	super : 지역변수 : 상위 클래스의 생성될 객체의 참조변수
	super() : 상위클래스의 생성자 메서드
2. 상속에서 클래스 생성과 형 변환

3. 메서드 오버라이딩

4. 다형성

5. 다운캐스팅과 instanceof
	instanceof : 객체의 출처를 확인할때

추상클래스(abstract)
	- 하위클래스가 공유하게 되는 공통변수, 메서드

다형성

final 예약어

인터페이스 (추상 클래스와 비슷한 개념)
	- 특수한 목적(설계)을 가진 클래스의 일종
	- implements 사용
	- 설계를 목적으로 만들었기 때문에 변수는 사용불가하고 변수는 정적 상수가 된다!
	- dafault를 붙이고 함수를 구현하면 인식가능하다!!
	- 인터페이스의 상속

내부클래스 - 클래스 안에 정의된 클래스

1. 인스턴스 내부 클래스
	- 인스턴스 변수, 메서드와 유사한 성격
	- 외부 클래스가 객체가 생성되어야 생성할 수 있는 클래스
	- 외부 클래스 객체를 먼저 생성한후 만들어야함
	- Outer.Inner in = out.new Inner();
	
2. 정적 내부 클래스
	- 정적 변수, 정적 메서드와 유사한 성격
	- 외부 클래스 생성과 관련없이 독자적으로 사용할 수 있는 클래스
	- 외부 클래스 객체 안만들고 만들기 가능
	- Outer.Inner in = new Outer.Inner();
	- 내부 클래스만 이용한 경우 외부클래스 메서드 사용 불가능
	- 외부 클래스와 독립적인 사용
	
3. 지역 내부 클래스
	- 함수 내부에서 생성된 클래스 객체
	- 추상클래스, 인터페이스
		1) 지역 내부에서 정의
		2) 멤버변수
		3) 미구현된 메서드를 정의
	
4. 익명 내부 클래스

API(Application Programming Interface)
